variant: flatcar
version: 1.1.0

ignition:
  version: 3.4.0

passwd:
  users:
    - name: core
      shell: /bin/bash
      sudo: ["ALL=(ALL) NOPASSWD:ALL"]
      groups: [adm, wheel]
      lock_passwd: false
      ssh_authorized_keys:
        - ${ssh_keys}
    - name: root
      shell: /bin/bash
      ssh_authorized_keys:
        - ${ssh_keys}
      password_hash: "$6$hNh1nwO5OWWct4aZ$OoeAkQ4gKNBnGYK0ECi8saBMbUNeQRMICcOPYEu1bFuj9Axt4Rh6EnGba07xtIsGNt2wP9SsPlz543gfJww11/"

storage:
  files:
    - path: /etc/hostname
      filesystem: root
      mode: 0644
      contents:
        inline: ${host_name}
    - path: /home/core/install-components.sh
      filesystem: root
      mode: 0755
      contents:
        inline: |
          #!/bin/bash
          set -euo pipefail
          exec > /var/log/install-components.log 2>&1

          # Crear directorio para binarios
          sudo mkdir -p /opt/bin

          # Instalar kubelet
          curl -L -o /opt/bin/kubelet https://storage.googleapis.com/kubernetes-release/release/v1.21.0/bin/linux/amd64/kubelet
          sudo chmod +x /opt/bin/kubelet

          # Instalar oc (OpenShift Client)
          curl -L -o /tmp/oc.tar.gz https://mirror.openshift.com/pub/openshift-v4/clients/oc/latest/linux/oc.tar.gz
          tar -xzf /tmp/oc.tar.gz -C /tmp
          sudo mv /tmp/oc /opt/bin/oc
          sudo chmod +x /opt/bin/oc
          sudo rm -rf /tmp/oc.tar.gz

          # Instalar Podman
          curl -L -o /tmp/podman.tar.gz https://github.com/containers/podman/releases/download/v3.4.2/podman-remote-static-v3.4.2-linux-amd64.tar.gz
          sudo tar -xzf /tmp/podman.tar.gz -C /usr/bin/
          sudo chmod +x /usr/bin/podman
          sudo rm -rf /tmp/podman.tar.gz

          # Verificar instalaci√≥n de Podman
          podman --version

          # Instalar CRI-O
          curl -L -o /tmp/crio-v1.21.0.tar.gz https://github.com/cri-o/cri-o/archive/refs/tags/v1.21.0.tar.gz
          tar -xzf /tmp/crio-v1.21.0.tar.gz -C /tmp

          # Use a container to build CRI-O binaries
          docker run --rm -it -v /tmp/cri-o-1.21.0:/usr/src/cri-o -w /usr/src/cri-o golang:1.16 bash -c "make clean && make binaries"

          # Copy binaries to Flatcar
          sudo cp /tmp/cri-o-1.21.0/bin/* /opt/bin/
          sudo chmod +x /opt/bin/crio

          # Clean up
          sudo rm -rf /tmp/crio-v1.21.0.tar.gz /tmp/cri-o-1.21.0

          # Create CRI-O configuration
          sudo mkdir -p /etc/crio
          cat <<EOF | sudo tee /etc/crio/crio.conf
          [crio]
          version = "1.21.0"
          [crio.runtime]
          conmon = "/usr/bin/conmon"
          EOF

          # Create systemd service for CRI-O
          sudo mkdir -p /etc/systemd/system/
          cat <<EOF | sudo tee /etc/systemd/system/crio.service
          [Unit]
          Description=CRI-O daemon
          Documentation=https://github.com/cri-o/cri-o
          After=network-online.target
          Wants=network-online.target

          [Service]
          ExecStart=/opt/bin/crio
          Restart=always
          RestartSec=10s
          StartLimitInterval=0
          LimitNOFILE=infinity
          LimitNPROC=infinity
          LimitCORE=infinity
          TasksMax=infinity
          OOMScoreAdjust=-999
          EOF

          # Recargar systemd y activar servicios
          sudo systemctl daemon-reload
          sudo systemctl enable kubelet
          sudo systemctl start kubelet
          sudo systemctl enable crio
          sudo systemctl start crio

          # Verificar las instalaciones
          sudo kubelet --version
          sudo oc version
          sudo crio --version

    - path: /etc/systemd/system/podman.service
      filesystem: root
      mode: 0644
      contents:
        inline: |
          [Unit]
          Description=Podman API Service
          After=network.target

          [Service]
          ExecStart=/usr/bin/podman system service -t 0
          Restart=always
          RestartSec=10

          [Install]
          WantedBy=multi-user.target

    - path: /etc/systemd/network/10-eth0.network
      filesystem: root
      mode: 0644
      contents:
        inline: |
          [Match]
          Name=eth0

          [Network]
          Address=${ip}/24
          Gateway=${gateway}
          DNS=${dns1}
          DNS=${dns2}

    - path: /etc/tmpfiles.d/hosts.conf
      filesystem: root
      mode: 0644
      contents:
        inline: |
          f /etc/hosts 0644 - - - -
          127.0.0.1   localhost
          ::1         localhost
          ${ip}  ${host_name} ${name}

    - path: /run/systemd/resolve/resolv.conf
      filesystem: root
      mode: 0644
      contents:
        inline: |
          nameserver ${dns1}
          nameserver ${dns2}

    - path: /etc/tmpfiles.d/resolv.conf
      filesystem: root
      mode: 0644
      contents:
        inline: |
          L /etc/resolv.conf - - - - /run/systemd/resolve/resolv.conf

systemd:
  units:
    - name: crio.service
      enabled: true
    - name: podman.service
      enabled: true
    - name: apply-network-routes.service
      enabled: true
      contents: |
        [Unit]
        Description=Apply custom network routes
        After=network-online.target
        Wants=network-online.target

        [Service]
        Type=oneshot
        ExecStart=/usr/bin/systemctl restart systemd-networkd.service
        RemainAfterExit=true

        [Install]
        WantedBy=multi-user.target

    - name: set-hosts.service
      enabled: true
      contents: |
        [Unit]
        Description=Set /etc/hosts file
        After=network.target

        [Service]
        Type=oneshot
        ExecStart=/bin/bash -c 'echo "127.0.0.1   localhost" > /etc/hosts; echo "::1         localhost" >> /etc/hosts; echo "${ip}  ${host_name} ${name}" >> /etc/hosts'
        RemainAfterExit=true

        [Install]
        WantedBy=multi-user.target

    - name: install-components.service
      enabled: true
      contents: |
        [Unit]
        Description=Install Kubernetes components
        After=network-online.target
        Wants=network-online.target

        [Service]
        Type=oneshot
        ExecStart=/bin/bash /home/core/install-components.sh
        RemainAfterExit=true

        [Install]
        WantedBy=multi-user.target

    - name: getty@tty1.service
      enabled: true
      contents: |
        [Unit]
        Description=Getty on tty1
        After=systemd-user-sessions.service plymouth-quit-wait.service rc-local.service
        Wants=rc-local.service

        [Service]
        ExecStart=-/sbin/agetty %I $TERM
        Type=idle
        Restart=always

        [Install]
        WantedBy=multi-user.target