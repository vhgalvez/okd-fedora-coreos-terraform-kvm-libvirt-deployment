variant: flatcar
version: 1.1.0

ignition:
  version: 3.4.0

passwd:
  users:
    - name: core
      shell: /bin/bash
      sudo: ["ALL=(ALL) NOPASSWD:ALL"]
      groups: [adm, wheel]
      lock_passwd: false
      ssh_authorized_keys:
        - ${ssh_keys}
    - name: root
      shell: /bin/bash
      ssh_authorized_keys:
        - ${ssh_keys}
      password_hash: "$6$hNh1nwO5OWWct4aZ$OoeAkQ4gKNBnGYK0ECi8saBMbUNeQRMICcOPYEu1bFuj9Axt4Rh6EnGba07xtIsGNt2wP9SsPlz543gfJww11/"

storage:
  directories:
    - path: /etc/kubernetes/pki
      filesystem: root
      mode: 0755
    - path: /opt/bin
      filesystem: root
      mode: 0755
    - path: /etc/cni/net.d
      filesystem: root
      mode: 0755
    - path: /var/lib/etcd
      filesystem: root
      mode: 0755

  files:
    - path: /etc/hostname
      filesystem: root
      mode: 0644
      contents:
        inline: ${host_name}

    - path: /etc/kubernetes/pki/ca.crt
      filesystem: root
      mode: 0644
      contents:
        inline: ""

    - path: /etc/kubernetes/pki/kubelet.crt
      filesystem: root
      mode: 0644
      contents:
        inline: ""

    - path: /etc/kubernetes/pki/kubelet.key
      filesystem: root
      mode: 0600
      contents:
        inline: ""

    - path: /etc/kubernetes/pki/apiserver.crt
      filesystem: root
      mode: 0644
      contents:
        inline: ""

    - path: /etc/kubernetes/pki/apiserver.key
      filesystem: root
      mode: 0600
      contents:
        inline: ""

    - path: /etc/kubernetes/pki/sa.pub
      filesystem: root
      mode: 0644
      contents:
        inline: ""

    - path: /etc/kubernetes/pki/sa.key
      filesystem: root
      mode: 0600
      contents:
        inline: ""

    - path: /etc/kubernetes/pki/etcd/etcd.crt
      filesystem: root
      mode: 0644
      contents:
        inline: ""

    - path: /etc/kubernetes/pki/etcd/etcd.key
      filesystem: root
      mode: 0600
      contents:
        inline: ""

    - path: /etc/kubernetes/pki/etcd/ca.crt
      filesystem: root
      mode: 0644
      contents:
        inline: ""

    - path: /etc/kubernetes/pki/apiserver-etcd-client.crt
      filesystem: root
      mode: 0644
      contents:
        inline: ""

    - path: /etc/kubernetes/pki/apiserver-etcd-client.key
      filesystem: root
      mode: 0600
      contents:
        inline: ""

    - path: /etc/kubernetes/kubelet.conf
      filesystem: root
      mode: 0644
      contents:
        inline: |
          apiVersion: v1
          kind: Config
          clusters:
          - cluster:
              certificate-authority: /etc/kubernetes/pki/ca.crt
              server: https://${ip}:6443
            name: local
          contexts:
          - context:
              cluster: local
              user: kubelet
            name: local
          current-context: local
          users:
          - name: kubelet
            user:
              client-certificate: /etc/kubernetes/pki/kubelet.crt
              client-key: /etc/kubernetes/pki/kubelet.key

    - path: /etc/kubernetes/kubelet-config.yaml
      filesystem: root
      mode: 0644
      contents:
        inline: |
          kind: KubeletConfiguration
          apiVersion: kubelet.config.k8s.io/v1beta1
          authentication:
            x509:
              clientCAFile: "/etc/kubernetes/pki/ca.crt"
          authorization:
            mode: Webhook
          serverTLSBootstrap: true
          tlsCertFile: "/etc/kubernetes/pki/kubelet.crt"
          tlsPrivateKeyFile: "/etc/kubernetes/pki/kubelet.key"
          cgroupDriver: systemd
          runtimeRequestTimeout: "15m"
          containerRuntimeEndpoint: "unix:///var/run/crio/crio.sock"

    - path: /etc/kubernetes/scheduler.conf
      filesystem: root
      mode: 0644
      contents:
        inline: |
          apiVersion: v1
          clusters:
          - cluster:
              certificate-authority: /etc/kubernetes/pki/ca.crt
              server: https://127.0.0.1:6443
            name: local
          contexts:
          - context:
              cluster: local
              user: system:kube-scheduler
            name: system:kube-scheduler@local
          current-context: system:kube-scheduler@local
          kind: Config
          preferences: {}
          users:
          - name: system:kube-scheduler
            user:
              client-certificate: /etc/kubernetes/pki/scheduler.crt
              client-key: /etc/kubernetes/pki/scheduler.key

    - path: /etc/kubernetes/manifests/kube-apiserver.yaml
      filesystem: root
      mode: 0644
      contents:
        inline: |
          apiVersion: v1
          kind: Pod
          metadata:
            name: kube-apiserver
            namespace: kube-system
          spec:
            containers:
            - name: kube-apiserver
              image: k8s.gcr.io/kube-apiserver:v1.21.0
              command:
              - kube-apiserver
              - --advertise-address=${ip}
              - --allow-privileged=true
              - --authorization-mode=Node,RBAC
              - --client-ca-file=/etc/kubernetes/pki/ca.crt
              - --enable-admission-plugins=NodeRestriction
              - --enable-bootstrap-token-auth=true
              - --etcd-servers=https://127.0.0.1:2379
              - --etcd-cafile=/etc/kubernetes/pki/etcd/ca.crt
              - --etcd-certfile=/etc/kubernetes/pki/apiserver-etcd-client.crt
              - --etcd-keyfile=/etc/kubernetes/pki/apiserver-etcd-client.key
              - --kubelet-client-certificate=/etc/kubernetes/pki/apiserver.crt
              - --kubelet-client-key=/etc/kubernetes/pki/apiserver.key
              - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
              - --service-cluster-ip-range=<Your-Service-CIDR>
              - --tls-cert-file=/etc/kubernetes/pki/apiserver.crt
              - --tls-private-key-file=/etc/kubernetes/pki/apiserver.key
              volumeMounts:
              - mountPath: /etc/kubernetes/pki
                name: pki
                readOnly: true
            volumes:
            - name: pki
              hostPath:
                path: /etc/kubernetes/pki

    - path: /etc/kubernetes/manifests/kube-controller-manager.yaml
      filesystem: root
      mode: 0644
      contents:
        inline: |
          apiVersion: v1
          kind: Pod
          metadata:
            name: kube-controller-manager
            namespace: kube-system
          spec:
            containers:
            - name: kube-controller-manager
              image: k8s.gcr.io/kube-controller-manager:v1.21.0
              command:
              - kube-controller-manager
              - --bind-address=127.0.0.1
              - --cluster-cidr=<Your-Pod-CIDR>
              - --cluster-signing-cert-file=/etc/kubernetes/pki/ca.crt
              - --cluster-signing-key-file=/etc/kubernetes/pki/ca.key
              - --kubeconfig=/etc/kubernetes/controller-manager.conf
              - --leader-elect=true
              - --root-ca-file=/etc/kubernetes/pki/ca.crt
              - --service-account-private-key-file=/etc/kubernetes/pki/sa.key
              - --use-service-account-credentials=true
              volumeMounts:
              - mountPath: /etc/kubernetes/pki
                name: pki
                readOnly: true
            volumes:
            - name: pki
              hostPath:
                path: /etc/kubernetes/pki
    - path: /etc/kubernetes/manifests/kube-scheduler.yaml
      filesystem: root
      mode: 0644
      contents:
        inline: |
          apiVersion: v1
          kind: Pod
          metadata:
            name: kube-scheduler
            namespace: kube-system
          spec:
            containers:
            - name: kube-scheduler
              image: k8s.gcr.io/kube-scheduler:v1.21.0
              command:
              - kube-scheduler
              - --bind-address=127.0.0.1
              - --kubeconfig=/etc/kubernetes/scheduler.conf
              volumeMounts:
              - mountPath: /etc/kubernetes
                name: kubeconfig
                readOnly: true
            volumes:
            - name: kubeconfig
              hostPath:
                path: /etc/kubernetes

    - path: /etc/kubernetes/manifests/etcd.yaml
      filesystem: root
      mode: 0644
      contents:
        inline: |
          apiVersion: v1
          kind: Pod
          metadata:
            name: etcd
            namespace: kube-system
          spec:
            containers:
            - name: etcd
              image: k8s.gcr.io/etcd:v3.4.13-0
              command:
              - etcd
              - --advertise-client-urls=https://127.0.0.1:2379
              - --cert-file=/etc/kubernetes/pki/etcd/etcd.crt
              - --key-file=/etc/kubernetes/pki/etcd/etcd.key
              - --client-cert-auth=true
              - --data-dir=/var/lib/etcd
              - --initial-advertise-peer-urls=https://127.0.0.1:2380
              - --initial-cluster=default=https://127.0.0.1:2380
              - --listen-client-urls=https://127.0.0.1:2379
              - --listen-peer-urls=https://127.0.0.1:2380
              - --peer-cert-file=/etc/kubernetes/pki/etcd/etcd.crt
              - --peer-key-file=/etc/kubernetes/pki/etcd/etcd.key
              - --peer-client-cert-auth=true
              - --peer-trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt
              - --trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt
              volumeMounts:
              - mountPath: /etc/kubernetes/pki/etcd
                name: pki
                readOnly: true
              - mountPath: /var/lib/etcd
                name: etcd-data
            volumes:
            - name: pki
              hostPath:
                path: /etc/kubernetes/pki/etcd
            - name: etcd-data
              hostPath:
                path: /var/lib/etcd

systemd:
  units:
    - name: apply-network-routes.service
      enabled: true
      contents: |
        [Unit]
        Description=Apply custom network routes
        After=network-online.target
        Wants=network-online.target

        [Service]
        Type=oneshot
        ExecStart=/usr/bin/systemctl restart systemd-networkd.service
        RemainAfterExit=true

        [Install]
        WantedBy=multi-user.target

    - name: set-hosts.service
      enabled: true
      contents: |
        [Unit]
        Description=Set /etc/hosts file
        After=network.target

        [Service]
        Type=oneshot
        ExecStart=/bin/bash -c 'echo "127.0.0.1   localhost" > /etc/hosts; echo "::1         localhost" >> /etc/hosts; echo "${ip}  ${host_name} ${node_name}" >> /etc/hosts'
        RemainAfterExit=true

        [Install]
        WantedBy=multi-user.target

    - name: download-certificates.service
      enabled: true
      contents: |
        [Unit]
        Description=Download Kubernetes Certificates
        After=network-online.target
        Wants=network-online.target

        [Service]
        Type=oneshot
        ExecStart=/bin/bash -c 'curl -o /etc/kubernetes/pki/ca.crt http://10.17.3.14/shared/ca/ca.crt && \
                                curl -o /etc/kubernetes/pki/kubelet.crt http://10.17.3.14/${node_name}/kubelet/kubelet.crt && \
                                curl -o /etc/kubernetes/pki/kubelet.key http://10.17.3.14/${node_name}/kubelet/kubelet.key && \
                                curl -o /etc/kubernetes/pki/apiserver.crt http://10.17.3.14/shared/apiserver/apiserver.crt && \
                                curl -o /etc/kubernetes/pki/apiserver.key http://10.17.3.14/shared/apiserver/apiserver.key && \
                                curl -o /etc/kubernetes/pki/sa.pub http://10.17.3.14/shared/sa/sa.pub && \
                                curl -o /etc/kubernetes/pki/sa.key http://10.17.3.14/shared/sa/sa.key && \
                                curl -o /etc/kubernetes/pki/etcd/etcd.crt http://10.17.3.14/shared/etcd/etcd.crt && \
                                curl -o /etc/kubernetes/pki/etcd/etcd.key http://10.17.3.14/shared/etcd/etcd.key && \
                                curl -o /etc/kubernetes/pki/etcd/ca.crt http://10.17.3.14/shared/etcd/ca.crt && \
                                curl -o /etc/kubernetes/pki/apiserver-etcd-client.crt http://10.17.3.14/shared/apiserver-etcd-client/apiserver-etcd-client.crt && \
                                curl -o /etc/kubernetes/pki/apiserver-etcd-client.key http://10.17.3.14/shared/apiserver-etcd-client/apiserver-etcd-client.key'
        RemainAfterExit=true

        [Install]
        WantedBy=multi-user.target

    - name: crio.service
      enabled: true

    - name: install-components.service
      enabled: true
      contents: |
        [Unit]
        Description=Install Kubernetes components
        After=download-certificates.service
        Wants=download-certificates.service

        [Service]
        Type=oneshot
        ExecStart=/bin/bash /home/core/install-components.sh
        RemainAfterExit=true

        [Install]
        WantedBy=multi-user.target

    - name: kube-apiserver.service
      enabled: true
      contents: |
        [Unit]
        Description=Kubernetes API Server
        After=install-components.service
        Wants=install-components.service

        [Service]
        ExecStartPre=/bin/sleep 10